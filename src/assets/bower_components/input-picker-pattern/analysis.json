{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`overlay-element`\nA helper-element, that creates an overlay using `iron-overlay-behavior` of Polymer.",
      "summary": "",
      "path": "overlay-element.html",
      "properties": [
        {
          "name": "sizingTarget",
          "type": "!Element",
          "description": "The element that will receive a `max-height`/`width`. By default it is the same as `this`,\nbut it can be set to a child element. This is useful, for example, for implementing a\nscrolling region inside the element.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 69,
              "column": 6
            },
            "end": {
              "line": 74,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "fitInto",
          "type": "Object",
          "description": "The element to fit `this` into.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 82,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "noOverlap",
          "type": "boolean",
          "description": "Will position the element around the positionTarget without overlapping it.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 87,
              "column": 6
            },
            "end": {
              "line": 89,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "positionTarget",
          "type": "!Element",
          "description": "The element that should be used to position the element. If not set, it will\ndefault to the parent node.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 96,
              "column": 6
            },
            "end": {
              "line": 98,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "horizontalAlign",
          "type": "string",
          "description": "The orientation against which to align the element horizontally\nrelative to the `positionTarget`. Possible values are \"left\", \"right\", \"center\", \"auto\".",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 104,
              "column": 6
            },
            "end": {
              "line": 106,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "verticalAlign",
          "type": "string",
          "description": "The orientation against which to align the element vertically\nrelative to the `positionTarget`. Possible values are \"top\", \"bottom\", \"middle\", \"auto\".",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 112,
              "column": 6
            },
            "end": {
              "line": 114,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "dynamicAlign",
          "type": "boolean",
          "description": "If true, it will use `horizontalAlign` and `verticalAlign` values as preferred alignment\nand if there's not enough space, it will pick the values which minimize the cropping.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 120,
              "column": 6
            },
            "end": {
              "line": 122,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "horizontalOffset",
          "type": "number",
          "description": "A pixel value that will be added to the position calculated for the\ngiven `horizontalAlign`, in the direction of alignment. You can think\nof it as increasing or decreasing the distance to the side of the\nscreen given by `horizontalAlign`.\n\nIf `horizontalAlign` is \"left\" or \"center\", this offset will increase or\ndecrease the distance to the left side of the screen: a negative offset will\nmove the dropdown to the left; a positive one, to the right.\n\nConversely if `horizontalAlign` is \"right\", this offset will increase\nor decrease the distance to the right side of the screen: a negative\noffset will move the dropdown to the right; a positive one, to the left.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 138,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "0",
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "verticalOffset",
          "type": "number",
          "description": "A pixel value that will be added to the position calculated for the\ngiven `verticalAlign`, in the direction of alignment. You can think\nof it as increasing or decreasing the distance to the side of the\nscreen given by `verticalAlign`.\n\nIf `verticalAlign` is \"top\" or \"middle\", this offset will increase or\ndecrease the distance to the top side of the screen: a negative offset will\nmove the dropdown upwards; a positive one, downwards.\n\nConversely if `verticalAlign` is \"bottom\", this offset will increase\nor decrease the distance to the bottom side of the screen: a negative\noffset will move the dropdown downwards; a positive one, upwards.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 158,
              "column": 6
            },
            "end": {
              "line": 162,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "0",
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "autoFitOnAttach",
          "type": "boolean",
          "description": "Set to true to auto-fit on attach.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 167,
              "column": 6
            },
            "end": {
              "line": 170,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "_fitInfo",
          "type": "?Object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 173,
              "column": 6
            },
            "end": {
              "line": 175,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "_parentResizable",
          "type": "Object",
          "description": "The closest ancestor element that implements `IronResizableBehavior`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-resizable-behavior\\iron-resizable-behavior.html",
            "start": {
              "line": 36,
              "column": 6
            },
            "end": {
              "line": 39,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_parentResizableChanged\""
            }
          },
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_notifyingDescendant",
          "type": "boolean",
          "description": "True if this element is currently notifying its descendant elements of\nresize.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-resizable-behavior\\iron-resizable-behavior.html",
            "start": {
              "line": 45,
              "column": 6
            },
            "end": {
              "line": 48,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "opened",
          "type": "boolean",
          "description": "True if the overlay is currently displayed.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 29,
              "column": 6
            },
            "end": {
              "line": 34,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_openedChanged\""
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "canceled",
          "type": "boolean",
          "description": "True if the overlay was canceled when it was last closed.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 39,
              "column": 6
            },
            "end": {
              "line": 44,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_canceledChanged\"",
              "readOnly": true
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "withBackdrop",
          "type": "boolean",
          "description": "Set to true to display a backdrop behind the overlay. It traps the focus\nwithin the light DOM of the overlay.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 50,
              "column": 6
            },
            "end": {
              "line": 53,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_withBackdropChanged\""
            }
          },
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "noAutoFocus",
          "type": "boolean",
          "description": "Set to true to disable auto-focusing the overlay or child nodes with\nthe `autofocus` attribute` when the overlay is opened.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 59,
              "column": 6
            },
            "end": {
              "line": 62,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "noCancelOnEscKey",
          "type": "boolean",
          "description": "Set to true to disable canceling the overlay with the ESC key.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 67,
              "column": 6
            },
            "end": {
              "line": 70,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "noCancelOnOutsideClick",
          "type": "boolean",
          "description": "Set to true to disable canceling the overlay by clicking outside it.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 75,
              "column": 6
            },
            "end": {
              "line": 78,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "closingReason",
          "type": "Object",
          "description": "Contains the reason(s) this overlay was last closed (see `iron-overlay-closed`).\n`IronOverlayBehavior` provides the `canceled` reason; implementers of the\nbehavior can provide other reasons in addition to `canceled`.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 85,
              "column": 6
            },
            "end": {
              "line": 89,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "restoreFocusOnClose",
          "type": "boolean",
          "description": "Set to true to enable restoring of focus when overlay is closed.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 94,
              "column": 6
            },
            "end": {
              "line": 97,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "allowClickThrough",
          "type": "boolean",
          "description": "Set to true to allow clicks to go through overlays.\nWhen the user clicks outside this overlay, the click may\nclose the overlay below.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 104,
              "column": 6
            },
            "end": {
              "line": 106,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "alwaysOnTop",
          "type": "boolean",
          "description": "Set to true to keep overlay always on top.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 111,
              "column": 6
            },
            "end": {
              "line": 113,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "scrollAction",
          "type": "string",
          "description": "Determines which action to perform when scroll outside an opened overlay happens.\nPossible values:\nlock - blocks scrolling from happening,\nrefit - computes the new position on the overlay\ncancel - causes the overlay to close",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 122,
              "column": 6
            },
            "end": {
              "line": 124,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_manager",
          "type": "!Polymer.IronOverlayManagerClass",
          "description": "Shortcut to access to the overlay manager.",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 131,
              "column": 6
            },
            "end": {
              "line": 134,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_focusedChild",
          "type": "?Node",
          "description": "The node being focused.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 140,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        }
      ],
      "methods": [
        {
          "name": "_fitWidth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 178,
              "column": 4
            },
            "end": {
              "line": 186,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "_fitHeight",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 188,
              "column": 4
            },
            "end": {
              "line": 196,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "_fitLeft",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 198,
              "column": 4
            },
            "end": {
              "line": 206,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "_fitTop",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 208,
              "column": 4
            },
            "end": {
              "line": 216,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "_defaultPositionTarget",
          "description": "The element that should be used to position the element,\nif no position target is configured.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 222,
              "column": 4
            },
            "end": {
              "line": 230,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "_localeHorizontalAlign",
          "description": "The horizontal align value, accounting for the RTL/LTR text direction.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 235,
              "column": 4
            },
            "end": {
              "line": 246,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "__shouldPosition",
          "description": "True if the element should be positioned instead of centered.",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 252,
              "column": 4
            },
            "end": {
              "line": 255,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "attached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 207,
              "column": 4
            },
            "end": {
              "line": 213,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 215,
              "column": 4
            },
            "end": {
              "line": 237,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "fit",
          "description": "Positions and fits the element into the `fitInto` element.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 289,
              "column": 4
            },
            "end": {
              "line": 293,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "_discoverInfo",
          "description": "Memoize information needed to position and size the target element.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 299,
              "column": 4
            },
            "end": {
              "line": 336,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "resetFit",
          "description": "Resets the target element's position and size constraints, and clear\nthe memoized data.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 342,
              "column": 4
            },
            "end": {
              "line": 352,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "refit",
          "description": "Equivalent to calling `resetFit()` and `fit()`. Useful to call this after\nthe element or the `fitInto` element has been resized, or if any of the\npositioning properties (e.g. `horizontalAlign, verticalAlign`) is updated.\nIt preserves the scroll position of the sizingTarget.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 360,
              "column": 4
            },
            "end": {
              "line": 367,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "position",
          "description": "Positions the element according to `horizontalAlign, verticalAlign`.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 372,
              "column": 4
            },
            "end": {
              "line": 422,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "constrain",
          "description": "Constrains the size of the element to `fitInto` by setting `max-height`\nand/or `max-width`.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 428,
              "column": 4
            },
            "end": {
              "line": 455,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "_sizeDimension",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 461,
              "column": 4
            },
            "end": {
              "line": 463,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "rect"
            },
            {
              "name": "positionedBy"
            },
            {
              "name": "start"
            },
            {
              "name": "end"
            },
            {
              "name": "extent"
            }
          ],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "__sizeDimension",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 468,
              "column": 4
            },
            "end": {
              "line": 478,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "rect"
            },
            {
              "name": "positionedBy"
            },
            {
              "name": "start"
            },
            {
              "name": "end"
            },
            {
              "name": "extent"
            }
          ],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "center",
          "description": "Centers horizontally and vertically if not already positioned. This also sets\n`position:fixed`.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 484,
              "column": 4
            },
            "end": {
              "line": 517,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "__getNormalizedRect",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 519,
              "column": 4
            },
            "end": {
              "line": 531,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "target"
            }
          ],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "__getOffscreenArea",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 533,
              "column": 4
            },
            "end": {
              "line": 537,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "position"
            },
            {
              "name": "size"
            },
            {
              "name": "fitRect"
            }
          ],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "__getPosition",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 540,
              "column": 4
            },
            "end": {
              "line": 659,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hAlign"
            },
            {
              "name": "vAlign"
            },
            {
              "name": "size"
            },
            {
              "name": "sizeNoMargins"
            },
            {
              "name": "positionRect"
            },
            {
              "name": "fitRect"
            }
          ],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "created",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-resizable-behavior\\iron-resizable-behavior.html",
            "start": {
              "line": 55,
              "column": 4
            },
            "end": {
              "line": 60,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "notifyResize",
          "description": "Can be called to manually notify a resizable and its descendant\nresizables of a resize change.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-resizable-behavior\\iron-resizable-behavior.html",
            "start": {
              "line": 80,
              "column": 4
            },
            "end": {
              "line": 92,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "assignParentResizable",
          "description": "Used to assign the closest resizable ancestor to this resizable\nif the ancestor detects a request for notifications.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-resizable-behavior\\iron-resizable-behavior.html",
            "start": {
              "line": 98,
              "column": 4
            },
            "end": {
              "line": 100,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "parentResizable"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "stopResizeNotificationsFor",
          "description": "Used to remove a resizable descendant from the list of descendants\nthat should be notified of a resize change.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-resizable-behavior\\iron-resizable-behavior.html",
            "start": {
              "line": 106,
              "column": 4
            },
            "end": {
              "line": 113,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "target"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "resizerShouldNotify",
          "description": "This method can be overridden to filter nested elements that should or\nshould not be notified by the current element. Return true if an element\nshould be notified, or false if it should not be notified.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-resizable-behavior\\iron-resizable-behavior.html",
            "start": {
              "line": 124,
              "column": 4
            },
            "end": {
              "line": 124,
              "column": 59
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "element",
              "type": "HTMLElement",
              "description": "A candidate descendant element that\nimplements `IronResizableBehavior`."
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if the `element` should be notified of resize."
          },
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_onDescendantIronResize",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-resizable-behavior\\iron-resizable-behavior.html",
            "start": {
              "line": 126,
              "column": 4
            },
            "end": {
              "line": 138,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_fireResize",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-resizable-behavior\\iron-resizable-behavior.html",
            "start": {
              "line": 140,
              "column": 4
            },
            "end": {
              "line": 145,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_onIronRequestResizeNotifications",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-resizable-behavior\\iron-resizable-behavior.html",
            "start": {
              "line": 147,
              "column": 4
            },
            "end": {
              "line": 162,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_parentResizableChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-resizable-behavior\\iron-resizable-behavior.html",
            "start": {
              "line": 164,
              "column": 4
            },
            "end": {
              "line": 168,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "parentResizable"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_notifyDescendant",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-resizable-behavior\\iron-resizable-behavior.html",
            "start": {
              "line": 170,
              "column": 4
            },
            "end": {
              "line": 181,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "descendant"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_requestResizeNotifications",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-resizable-behavior\\iron-resizable-behavior.html",
            "start": {
              "line": 183,
              "column": 4
            },
            "end": {
              "line": 211,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "backdropElement",
          "description": "The backdrop element.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 158,
              "column": 4
            },
            "end": {
              "line": 160,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "!Element"
          },
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_focusNode",
          "description": "Returns the node to give focus to.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 166,
              "column": 4
            },
            "end": {
              "line": 168,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "!Node"
          },
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_focusableNodes",
          "description": "Array of nodes that can receive focus (overlay included), ordered by `tabindex`.\nThis is used to retrieve which is the first and last focusable nodes in order\nto wrap the focus for overlays `with-backdrop`.\n\nIf you know what is your content (specifically the first and last focusable children),\nyou can override this method to return only `[firstFocusable, lastFocusable];`",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 180,
              "column": 4
            },
            "end": {
              "line": 182,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "!Array.<!Node>"
          },
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 187,
              "column": 4
            },
            "end": {
              "line": 205,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "toggle",
          "description": "Toggle the opened state of the overlay.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 242,
              "column": 4
            },
            "end": {
              "line": 245,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "open",
          "description": "Open the overlay.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 250,
              "column": 4
            },
            "end": {
              "line": 253,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "close",
          "description": "Close the overlay.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 258,
              "column": 4
            },
            "end": {
              "line": 261,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "cancel",
          "description": "Cancels the overlay.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 267,
              "column": 4
            },
            "end": {
              "line": 275,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "Event=",
              "description": "The original event"
            }
          ],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "invalidateTabbables",
          "description": "Invalidates the cached tabbable nodes. To be called when any of the focusable\ncontent changes (e.g. a button is disabled).",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 281,
              "column": 4
            },
            "end": {
              "line": 283,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_ensureSetup",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 285,
              "column": 4
            },
            "end": {
              "line": 292,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_openedChanged",
          "description": "Called when `opened` changes.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 299,
              "column": 4
            },
            "end": {
              "line": 316,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "opened",
              "type": "boolean="
            }
          ],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_canceledChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 318,
              "column": 4
            },
            "end": {
              "line": 321,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_withBackdropChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 323,
              "column": 4
            },
            "end": {
              "line": 335,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_prepareRenderOpened",
          "description": "tasks which must occur before opening; e.g. making the element visible.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 341,
              "column": 4
            },
            "end": {
              "line": 357,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_renderOpened",
          "description": "Tasks which cause the overlay to actually open; typically play an animation.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 363,
              "column": 4
            },
            "end": {
              "line": 365,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_renderClosed",
          "description": "Tasks which cause the overlay to actually close; typically play an animation.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 371,
              "column": 4
            },
            "end": {
              "line": 373,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_finishRenderOpened",
          "description": "Tasks to be performed at the end of open action. Will fire `iron-overlay-opened`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 379,
              "column": 4
            },
            "end": {
              "line": 384,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_finishRenderClosed",
          "description": "Tasks to be performed at the end of close action. Will fire `iron-overlay-closed`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 390,
              "column": 4
            },
            "end": {
              "line": 398,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_preparePositioning",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 400,
              "column": 4
            },
            "end": {
              "line": 404,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_finishPositioning",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 406,
              "column": 4
            },
            "end": {
              "line": 419,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_applyFocus",
          "description": "Applies focus according to the opened state.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 425,
              "column": 4
            },
            "end": {
              "line": 456,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_onCaptureClick",
          "description": "Cancels (closes) the overlay. Call when click happens outside the overlay.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 463,
              "column": 4
            },
            "end": {
              "line": 467,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "!Event"
            }
          ],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_onCaptureFocus",
          "description": "Keeps track of the focused child. If withBackdrop, traps focus within overlay.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 474,
              "column": 4
            },
            "end": {
              "line": 485,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "!Event"
            }
          ],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_onCaptureEsc",
          "description": "Handles the ESC key event and cancels (closes) the overlay.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 492,
              "column": 4
            },
            "end": {
              "line": 496,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "!Event"
            }
          ],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_onCaptureTab",
          "description": "Handles TAB key events to track focus changes.\nWill wrap focus for overlays withBackdrop.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 504,
              "column": 4
            },
            "end": {
              "line": 546,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "!Event"
            }
          ],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_onIronResize",
          "description": "Refits if the overlay is opened and not animating.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 552,
              "column": 4
            },
            "end": {
              "line": 556,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_onNodesChange",
          "description": "Will call notifyResize if overlay is opened.\nCan be overridden in order to avoid multiple observers on the same node.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 563,
              "column": 4
            },
            "end": {
              "line": 569,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "__ensureFirstLastFocusables",
          "description": "Will set first and last focusable nodes if any of them is not set.",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 575,
              "column": 4
            },
            "end": {
              "line": 581,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "__openedChanged",
          "description": "Tasks executed when opened changes: prepare for the opening, move the\nfocus, update the manager, render opened/closed.",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 588,
              "column": 4
            },
            "end": {
              "line": 604,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "__deraf",
          "description": "Debounces the execution of a callback to the next animation frame.",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 612,
              "column": 4
            },
            "end": {
              "line": 621,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "jobname",
              "type": "!string"
            },
            {
              "name": "callback",
              "type": "!Function",
              "description": "Always bound to `this`"
            }
          ],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "__updateScrollObservers",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 629,
              "column": 4
            },
            "end": {
              "line": 640,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isAttached",
              "type": "boolean"
            },
            {
              "name": "opened",
              "type": "boolean"
            },
            {
              "name": "scrollAction",
              "type": "string="
            }
          ],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "__addScrollListeners",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 645,
              "column": 4
            },
            "end": {
              "line": 667,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "__removeScrollListeners",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 672,
              "column": 4
            },
            "end": {
              "line": 684,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "__isValidScrollAction",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 691,
              "column": 4
            },
            "end": {
              "line": 695,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "scrollAction",
              "type": "string="
            }
          ],
          "return": {
            "type": "boolean"
          },
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "__onCaptureScroll",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 700,
              "column": 4
            },
            "end": {
              "line": 722,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "__saveScrollPosition",
          "description": "Memoizes the scroll position of the outside scrolling element.",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 728,
              "column": 4
            },
            "end": {
              "line": 737,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "__restoreScrollPosition",
          "description": "Resets the scroll position of the outside scrolling element.",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 743,
              "column": 4
            },
            "end": {
              "line": 752,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "_fitIntoChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 30,
              "column": 6
            },
            "end": {
              "line": 34,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fitInto"
            },
            {
              "name": "positionTarget"
            }
          ]
        },
        {
          "name": "_attachDom",
          "description": "attach dom with `delegatesFocus: true` so that the element is also focussed while its's children are too, and to autofocus to first tabable",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 39,
              "column": 6
            },
            "end": {
              "line": 48,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 19,
          "column": 4
        },
        "end": {
          "line": 49,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "OverlayElement",
      "attributes": [
        {
          "name": "sizing-target",
          "description": "The element that will receive a `max-height`/`width`. By default it is the same as `this`,\nbut it can be set to a child element. This is useful, for example, for implementing a\nscrolling region inside the element.",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 69,
              "column": 6
            },
            "end": {
              "line": 74,
              "column": 7
            }
          },
          "metadata": {},
          "type": "!Element",
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "fit-into",
          "description": "The element to fit `this` into.",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 82,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "no-overlap",
          "description": "Will position the element around the positionTarget without overlapping it.",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 87,
              "column": 6
            },
            "end": {
              "line": 89,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "position-target",
          "description": "The element that should be used to position the element. If not set, it will\ndefault to the parent node.",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 96,
              "column": 6
            },
            "end": {
              "line": 98,
              "column": 7
            }
          },
          "metadata": {},
          "type": "!Element",
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "horizontal-align",
          "description": "The orientation against which to align the element horizontally\nrelative to the `positionTarget`. Possible values are \"left\", \"right\", \"center\", \"auto\".",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 104,
              "column": 6
            },
            "end": {
              "line": 106,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "vertical-align",
          "description": "The orientation against which to align the element vertically\nrelative to the `positionTarget`. Possible values are \"top\", \"bottom\", \"middle\", \"auto\".",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 112,
              "column": 6
            },
            "end": {
              "line": 114,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "dynamic-align",
          "description": "If true, it will use `horizontalAlign` and `verticalAlign` values as preferred alignment\nand if there's not enough space, it will pick the values which minimize the cropping.",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 120,
              "column": 6
            },
            "end": {
              "line": 122,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "horizontal-offset",
          "description": "A pixel value that will be added to the position calculated for the\ngiven `horizontalAlign`, in the direction of alignment. You can think\nof it as increasing or decreasing the distance to the side of the\nscreen given by `horizontalAlign`.\n\nIf `horizontalAlign` is \"left\" or \"center\", this offset will increase or\ndecrease the distance to the left side of the screen: a negative offset will\nmove the dropdown to the left; a positive one, to the right.\n\nConversely if `horizontalAlign` is \"right\", this offset will increase\nor decrease the distance to the right side of the screen: a negative\noffset will move the dropdown to the right; a positive one, to the left.",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 138,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "vertical-offset",
          "description": "A pixel value that will be added to the position calculated for the\ngiven `verticalAlign`, in the direction of alignment. You can think\nof it as increasing or decreasing the distance to the side of the\nscreen given by `verticalAlign`.\n\nIf `verticalAlign` is \"top\" or \"middle\", this offset will increase or\ndecrease the distance to the top side of the screen: a negative offset will\nmove the dropdown upwards; a positive one, downwards.\n\nConversely if `verticalAlign` is \"bottom\", this offset will increase\nor decrease the distance to the bottom side of the screen: a negative\noffset will move the dropdown downwards; a positive one, upwards.",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 158,
              "column": 6
            },
            "end": {
              "line": 162,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "auto-fit-on-attach",
          "description": "Set to true to auto-fit on attach.",
          "sourceRange": {
            "file": "bower_components\\iron-fit-behavior\\iron-fit-behavior.html",
            "start": {
              "line": 167,
              "column": 6
            },
            "end": {
              "line": 170,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "opened",
          "description": "True if the overlay is currently displayed.",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 29,
              "column": 6
            },
            "end": {
              "line": 34,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "canceled",
          "description": "True if the overlay was canceled when it was last closed.",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 39,
              "column": 6
            },
            "end": {
              "line": 44,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "with-backdrop",
          "description": "Set to true to display a backdrop behind the overlay. It traps the focus\nwithin the light DOM of the overlay.",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 50,
              "column": 6
            },
            "end": {
              "line": 53,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "no-auto-focus",
          "description": "Set to true to disable auto-focusing the overlay or child nodes with\nthe `autofocus` attribute` when the overlay is opened.",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 59,
              "column": 6
            },
            "end": {
              "line": 62,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "no-cancel-on-esc-key",
          "description": "Set to true to disable canceling the overlay with the ESC key.",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 67,
              "column": 6
            },
            "end": {
              "line": 70,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "no-cancel-on-outside-click",
          "description": "Set to true to disable canceling the overlay by clicking outside it.",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 75,
              "column": 6
            },
            "end": {
              "line": 78,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "closing-reason",
          "description": "Contains the reason(s) this overlay was last closed (see `iron-overlay-closed`).\n`IronOverlayBehavior` provides the `canceled` reason; implementers of the\nbehavior can provide other reasons in addition to `canceled`.",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 85,
              "column": 6
            },
            "end": {
              "line": 89,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "restore-focus-on-close",
          "description": "Set to true to enable restoring of focus when overlay is closed.",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 94,
              "column": 6
            },
            "end": {
              "line": 97,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "allow-click-through",
          "description": "Set to true to allow clicks to go through overlays.\nWhen the user clicks outside this overlay, the click may\nclose the overlay below.",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 104,
              "column": 6
            },
            "end": {
              "line": 106,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "always-on-top",
          "description": "Set to true to keep overlay always on top.",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 111,
              "column": 6
            },
            "end": {
              "line": 113,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "name": "scroll-action",
          "description": "Determines which action to perform when scroll outside an opened overlay happens.\nPossible values:\nlock - blocks scrolling from happening,\nrefit - computes the new position on the overlay\ncancel - causes the overlay to close",
          "sourceRange": {
            "file": "bower_components\\iron-overlay-behavior\\iron-overlay-behavior.html",
            "start": {
              "line": 122,
              "column": 6
            },
            "end": {
              "line": 124,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "horizontal-offset-changed",
          "description": "Fired when the `horizontalOffset` property changes.",
          "metadata": {},
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "vertical-offset-changed",
          "description": "Fired when the `verticalOffset` property changes.",
          "metadata": {},
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "opened-changed",
          "description": "Fired when the `opened` property changes.",
          "metadata": {},
          "inheritedFrom": "Polymer.IronOverlayBehaviorImpl"
        },
        {
          "type": "CustomEvent",
          "name": "iron-overlay-canceled",
          "description": "iron-overlay-canceled",
          "metadata": {},
          "inheritedFrom": "Polymer.IronOverlayBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "iron-overlay-closed",
          "description": "iron-overlay-closed",
          "metadata": {},
          "inheritedFrom": "Polymer.IronOverlayBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "iron-overlay-opened",
          "description": "iron-overlay-opened",
          "metadata": {},
          "inheritedFrom": "Polymer.IronOverlayBehavior"
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "",
          "range": {
            "file": "overlay-element.html",
            "start": {
              "line": 5,
              "column": 4
            },
            "end": {
              "line": 5,
              "column": 17
            }
          }
        }
      ],
      "tagname": "overlay-element",
      "mixins": [
        "Polymer.IronOverlayBehavior"
      ]
    }
  ],
  "mixins": [
    {
      "description": "mixin to extend an element, to be compatible with iron-form",
      "summary": "",
      "path": "form-element-mixin.html",
      "properties": [
        {
          "name": "required",
          "type": "boolean",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 20,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "invalid",
          "type": "boolean",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 25,
              "column": 10
            },
            "end": {
              "line": 29,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "disables the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 34,
              "column": 10
            },
            "end": {
              "line": 38,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "name",
          "type": "string",
          "description": "name of the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 43,
              "column": 10
            },
            "end": {
              "line": 45,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "value",
          "type": "Object",
          "description": "value of the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 50,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "_valueIsSet",
          "type": "boolean",
          "description": "is true when the value is not undefined",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 61,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "propertyForValue",
          "type": "string",
          "description": "defines the property that should be used for the value",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 10
            },
            "end": {
              "line": 69,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_createReflectPropertyToValueObserver\""
            }
          }
        },
        {
          "name": "default",
          "type": "Object",
          "description": "default value of the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 10
            },
            "end": {
              "line": 76,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 88,
              "column": 6
            },
            "end": {
              "line": 91,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_computeInvalid",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 6
            },
            "end": {
              "line": 95,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "required"
            },
            {
              "name": "value"
            }
          ]
        },
        {
          "name": "_computeValueIsSet",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 6
            },
            "end": {
              "line": 99,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ]
        },
        {
          "name": "_defaultChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 6
            },
            "end": {
              "line": 112,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ]
        },
        {
          "name": "validate",
          "description": "validates the input for iron-form",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 6
            },
            "end": {
              "line": 119,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_attachDom",
          "description": "attach dom with `delegatesFocus: true` so that the element is also focussed while its's children are too, and to autofocus to first tabable",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 124,
              "column": 6
            },
            "end": {
              "line": 133,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ]
        },
        {
          "name": "_createReflectPropertyToValueObserver",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 6
            },
            "end": {
              "line": 148,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ]
        },
        {
          "name": "_reflectPropertyToValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 6
            },
            "end": {
              "line": 152,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "v"
            }
          ]
        },
        {
          "name": "_reflectValueToProperty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 154,
              "column": 6
            },
            "end": {
              "line": 156,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "v"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 7,
          "column": 2
        },
        "end": {
          "line": 158,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "FormElementMixin",
      "attributes": [
        {
          "name": "required",
          "description": "required attribute",
          "sourceRange": {
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 20,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "invalid",
          "description": "required attribute",
          "sourceRange": {
            "start": {
              "line": 25,
              "column": 10
            },
            "end": {
              "line": 29,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "disabled",
          "description": "disables the input",
          "sourceRange": {
            "start": {
              "line": 34,
              "column": 10
            },
            "end": {
              "line": 38,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "name",
          "description": "name of the input",
          "sourceRange": {
            "start": {
              "line": 43,
              "column": 10
            },
            "end": {
              "line": 45,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "value",
          "description": "value of the input",
          "sourceRange": {
            "start": {
              "line": 50,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "property-for-value",
          "description": "defines the property that should be used for the value",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 10
            },
            "end": {
              "line": 69,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "default",
          "description": "default value of the input",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 10
            },
            "end": {
              "line": 76,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    },
    {
      "description": "Mixin to extend an element that includes a native input to be wrapped. The pattern is using `input-shared-style` to unify the style between different inputs and should resize according to its properties and input.",
      "summary": "",
      "path": "input-pattern.html",
      "properties": [
        {
          "name": "required",
          "type": "boolean",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 20,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "invalid",
          "type": "boolean",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 25,
              "column": 10
            },
            "end": {
              "line": 29,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "disables the input",
          "privacy": "public",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 34,
              "column": 10
            },
            "end": {
              "line": 38,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "name",
          "type": "string",
          "description": "name of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 43,
              "column": 10
            },
            "end": {
              "line": 45,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value",
          "type": "Object",
          "description": "value of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 50,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_valueIsSet",
          "type": "boolean",
          "description": "is true when the value is not undefined",
          "privacy": "protected",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 61,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "propertyForValue",
          "type": "string",
          "description": "defines the property that should be used for the value",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 10
            },
            "end": {
              "line": 159,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"input\""
        },
        {
          "name": "default",
          "type": "string",
          "description": "the default value of the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 10
            },
            "end": {
              "line": 116,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "type",
          "type": "string",
          "description": "the type of the native input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 10
            },
            "end": {
              "line": 93,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"text\""
        },
        {
          "name": "input",
          "type": "string",
          "description": "the immediate input string",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 10
            },
            "end": {
              "line": 102,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_inputChanged\""
            }
          }
        },
        {
          "name": "placeholder",
          "type": "string",
          "description": "the placeholder string",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 107,
              "column": 10
            },
            "end": {
              "line": 109,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "minlength",
          "type": "number",
          "description": "the minlength of the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 121,
              "column": 10
            },
            "end": {
              "line": 123,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "noAutoWidth",
          "type": "boolean",
          "description": "if true, the length of the value is not used for computing the size-attribute",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 10
            },
            "end": {
              "line": 130,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "autoResize",
          "type": "boolean",
          "description": "if true, the length of the value is not used for computing the size-attribute",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 10
            },
            "end": {
              "line": 137,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_minWidthString",
          "type": "string",
          "description": "string that is used to compute the minimal width of the input",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 10
            },
            "end": {
              "line": 144,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "hidden",
          "type": "boolean",
          "description": "if `true`, the input is not displayed",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 10
            },
            "end": {
              "line": 151,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 171,
              "column": 6
            },
            "end": {
              "line": 179,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_computeInvalid",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 93,
              "column": 6
            },
            "end": {
              "line": 95,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "required"
            },
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_computeValueIsSet",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 97,
              "column": 6
            },
            "end": {
              "line": 99,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_defaultChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 249,
              "column": 6
            },
            "end": {
              "line": 253,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ]
        },
        {
          "name": "validate",
          "description": "validates the input for iron-form",
          "privacy": "public",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 117,
              "column": 6
            },
            "end": {
              "line": 119,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_attachDom",
          "description": "attach dom with `delegatesFocus: true` so that the element is also focussed while its's children are too, and to autofocus to first tabable",
          "privacy": "protected",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 124,
              "column": 6
            },
            "end": {
              "line": 133,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_createReflectPropertyToValueObserver",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 135,
              "column": 6
            },
            "end": {
              "line": 148,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectPropertyToValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 150,
              "column": 6
            },
            "end": {
              "line": 152,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "v"
            }
          ],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectValueToProperty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 154,
              "column": 6
            },
            "end": {
              "line": 156,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "v"
            }
          ],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 6
            },
            "end": {
              "line": 184,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_addEventListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 186,
              "column": 6
            },
            "end": {
              "line": 191,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_removeEventListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 193,
              "column": 6
            },
            "end": {
              "line": 198,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "focus",
          "description": "focus the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 203,
              "column": 6
            },
            "end": {
              "line": 206,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "blur",
          "description": "focus the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 211,
              "column": 6
            },
            "end": {
              "line": 214,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_checkKeycode",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 216,
              "column": 6
            },
            "end": {
              "line": 235,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_inputChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 240,
              "column": 6
            },
            "end": {
              "line": 247,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "input"
            }
          ]
        },
        {
          "name": "_checkInput",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 255,
              "column": 6
            },
            "end": {
              "line": 259,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_updateValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 261,
              "column": 6
            },
            "end": {
              "line": 267,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_computeMinWidth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 269,
              "column": 6
            },
            "end": {
              "line": 288,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "resize",
          "description": "called automatically when static `_minWidthString` changes, but can called manually to resize the minwidth of the input, when the input is for example initially hidden",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 293,
              "column": 6
            },
            "end": {
              "line": 337,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_debouncedComputeWidth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 339,
              "column": 6
            },
            "end": {
              "line": 344,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_computeWidth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 346,
              "column": 6
            },
            "end": {
              "line": 348,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 12,
          "column": 2
        },
        "end": {
          "line": 351,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "InputPattern",
      "attributes": [
        {
          "name": "required",
          "description": "required attribute",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 20,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "invalid",
          "description": "required attribute",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 25,
              "column": 10
            },
            "end": {
              "line": 29,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "description": "disables the input",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 34,
              "column": 10
            },
            "end": {
              "line": 38,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "name",
          "description": "name of the input",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 43,
              "column": 10
            },
            "end": {
              "line": 45,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value",
          "description": "value of the input",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 50,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "property-for-value",
          "description": "defines the property that should be used for the value",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 10
            },
            "end": {
              "line": 159,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "default",
          "description": "the default value of the input",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 10
            },
            "end": {
              "line": 116,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "type",
          "description": "the type of the native input",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 10
            },
            "end": {
              "line": 93,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "input",
          "description": "the immediate input string",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 10
            },
            "end": {
              "line": 102,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "placeholder",
          "description": "the placeholder string",
          "sourceRange": {
            "start": {
              "line": 107,
              "column": 10
            },
            "end": {
              "line": 109,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "minlength",
          "description": "the minlength of the input",
          "sourceRange": {
            "start": {
              "line": 121,
              "column": 10
            },
            "end": {
              "line": 123,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "no-auto-width",
          "description": "if true, the length of the value is not used for computing the size-attribute",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 10
            },
            "end": {
              "line": 130,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "auto-resize",
          "description": "if true, the length of the value is not used for computing the size-attribute",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 10
            },
            "end": {
              "line": 137,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "hidden",
          "description": "if `true`, the input is not displayed",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 10
            },
            "end": {
              "line": 151,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "mixins": [
        "FormElementMixin"
      ]
    },
    {
      "description": "mixin to extend an element with a test for an expected input type and implement a polyfill, when wanted or needed",
      "summary": "",
      "path": "input-picker-pattern.html",
      "properties": [
        {
          "name": "required",
          "type": "boolean",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 20,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "invalid",
          "type": "boolean",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 25,
              "column": 10
            },
            "end": {
              "line": 29,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "disables the input",
          "privacy": "public",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 34,
              "column": 10
            },
            "end": {
              "line": 38,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "name",
          "type": "string",
          "description": "name of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 43,
              "column": 10
            },
            "end": {
              "line": 45,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value",
          "type": "Object",
          "description": "value of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 50,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_valueIsSet",
          "type": "boolean",
          "description": "is true when the value is not undefined",
          "privacy": "protected",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 61,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "propertyForValue",
          "type": "string",
          "description": "defines the property that should be used for the value",
          "privacy": "public",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 66,
              "column": 10
            },
            "end": {
              "line": 69,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_createReflectPropertyToValueObserver\""
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "type": "Object",
          "description": "default value of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 74,
              "column": 10
            },
            "end": {
              "line": 76,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "native",
          "type": "boolean",
          "description": "Set to `true` to use the native input, if it available",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 158,
              "column": 10
            },
            "end": {
              "line": 161,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "nativeOnMobile",
          "type": "boolean",
          "description": "Set to `true` to use the native input automatically on mobile devices, if it available",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 10
            },
            "end": {
              "line": 169,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_nativeOnMobileChanged\""
            }
          }
        },
        {
          "name": "mobileUserAgentTestString",
          "type": "string",
          "description": "When `nativeOnMobile` is set to `true` this string is used to test the userAgent for a mobile device",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 174,
              "column": 10
            },
            "end": {
              "line": 178,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_nativeOnMobileChanged\""
            }
          },
          "defaultValue": "\"mM]obi|[tT]ablet|[aA]ndroid\""
        },
        {
          "name": "opened",
          "type": "boolean",
          "description": "if `true` the picker is opened",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 183,
              "column": 10
            },
            "end": {
              "line": 188,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "horizontalAlign",
          "type": "string",
          "description": "The orientation against which to align the element horizontally\nrelative to the related input element. Possible values are \"left\", \"right\", \"center\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 194,
              "column": 10
            },
            "end": {
              "line": 198,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"auto\""
        },
        {
          "name": "verticalAlign",
          "type": "string",
          "description": "The orientation against which to align the element vertically\nrelative to the related input element. Possible values are \"top\", \"bottom\", \"middle\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 204,
              "column": 10
            },
            "end": {
              "line": 208,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"auto\""
        },
        {
          "name": "autoConfirm",
          "type": "boolean",
          "description": "Set to `true` to make the input auto-confirming",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 213,
              "column": 10
            },
            "end": {
              "line": 216,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "noCancelOnEscKey",
          "type": "boolean",
          "description": "Set to `true` to disable canceling the overlay with the ESC key.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 221,
              "column": 10
            },
            "end": {
              "line": 224,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "noCancelOnOutsideClick",
          "type": "boolean",
          "description": "Set to `true` to disable canceling the dropdown by clicking outside the picker.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 229,
              "column": 10
            },
            "end": {
              "line": 232,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "keepMultiplePickersOpen",
          "type": "boolean",
          "description": "Set to `true` to keep multiple pickers open. (will only work as expected when e.g. `noCancelOnOutsideClick` is set to true)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 237,
              "column": 10
            },
            "end": {
              "line": 240,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "noTip",
          "type": "boolean",
          "description": "Set to `true` to disable the tip of the picker",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 245,
              "column": 10
            },
            "end": {
              "line": 248,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "confirmedValue",
          "type": "Object",
          "description": "The confirmed value. When `auto-confirm` is not set, the value will only change, when you confirm.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 253,
              "column": 10
            },
            "end": {
              "line": 256,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 278,
              "column": 6
            },
            "end": {
              "line": 286,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_computeInvalid",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 93,
              "column": 6
            },
            "end": {
              "line": 95,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "required"
            },
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_computeValueIsSet",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 97,
              "column": 6
            },
            "end": {
              "line": 99,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_defaultChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 531,
              "column": 6
            },
            "end": {
              "line": 540,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ]
        },
        {
          "name": "validate",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 507,
              "column": 6
            },
            "end": {
              "line": 510,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_attachDom",
          "description": "attach dom with `delegatesFocus: true` so that the element is also focussed while its's children are too, and to autofocus to first tabable",
          "privacy": "protected",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 124,
              "column": 6
            },
            "end": {
              "line": 133,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_createReflectPropertyToValueObserver",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 135,
              "column": 6
            },
            "end": {
              "line": 148,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectPropertyToValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 150,
              "column": 6
            },
            "end": {
              "line": 152,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "v"
            }
          ],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectValueToProperty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 154,
              "column": 6
            },
            "end": {
              "line": 156,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "v"
            }
          ],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 288,
              "column": 6
            },
            "end": {
              "line": 292,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_addPickerTransitionEndListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 294,
              "column": 6
            },
            "end": {
              "line": 301,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_removePickerTransitionEndListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 303,
              "column": 6
            },
            "end": {
              "line": 305,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onPickerTransitionEnd",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 307,
              "column": 6
            },
            "end": {
              "line": 312,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_addCancelOnClickListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 314,
              "column": 6
            },
            "end": {
              "line": 321,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_removeCancelOnClickListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 323,
              "column": 6
            },
            "end": {
              "line": 326,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_addKeepPickersOpenListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 328,
              "column": 6
            },
            "end": {
              "line": 332,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_removeKeepPickersOpenListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 334,
              "column": 6
            },
            "end": {
              "line": 336,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_stopPropagation",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 338,
              "column": 6
            },
            "end": {
              "line": 341,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_addKeyListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 343,
              "column": 6
            },
            "end": {
              "line": 346,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_removeKeyListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 348,
              "column": 6
            },
            "end": {
              "line": 351,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_nativeOnMobileChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 353,
              "column": 6
            },
            "end": {
              "line": 367,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_checkKeycode",
          "description": "key press event handler",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 373,
              "column": 6
            },
            "end": {
              "line": 392,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ]
        },
        {
          "name": "open",
          "description": "open the picker",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 397,
              "column": 6
            },
            "end": {
              "line": 414,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "close",
          "description": "close the picker",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 420,
              "column": 6
            },
            "end": {
              "line": 433,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ]
        },
        {
          "name": "toggle",
          "description": "toggle the picker",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 439,
              "column": 6
            },
            "end": {
              "line": 447,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ]
        },
        {
          "name": "confirm",
          "description": "confirms the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 453,
              "column": 6
            },
            "end": {
              "line": 466,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ]
        },
        {
          "name": "cancel",
          "description": "cancels the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 472,
              "column": 6
            },
            "end": {
              "line": 485,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "[type]",
              "description": "Event"
            }
          ]
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 487,
              "column": 6
            },
            "end": {
              "line": 497,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ]
        },
        {
          "name": "_confirmedValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 499,
              "column": 6
            },
            "end": {
              "line": 505,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "confirmedValue"
            }
          ]
        },
        {
          "name": "_setConfirmedValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 512,
              "column": 6
            },
            "end": {
              "line": 516,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_resetConfirmedValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 518,
              "column": 6
            },
            "end": {
              "line": 523,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_resetValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 525,
              "column": 6
            },
            "end": {
              "line": 529,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 14,
          "column": 2
        },
        "end": {
          "line": 542,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "InputPickerPattern",
      "attributes": [
        {
          "name": "required",
          "description": "required attribute",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 20,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "invalid",
          "description": "required attribute",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 25,
              "column": 10
            },
            "end": {
              "line": 29,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "description": "disables the input",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 34,
              "column": 10
            },
            "end": {
              "line": 38,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "name",
          "description": "name of the input",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 43,
              "column": 10
            },
            "end": {
              "line": 45,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value",
          "description": "value of the input",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 50,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "property-for-value",
          "description": "defines the property that should be used for the value",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 66,
              "column": 10
            },
            "end": {
              "line": 69,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "description": "default value of the input",
          "sourceRange": {
            "file": "form-element-mixin.html",
            "start": {
              "line": 74,
              "column": 10
            },
            "end": {
              "line": 76,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "native",
          "description": "Set to `true` to use the native input, if it available",
          "sourceRange": {
            "start": {
              "line": 158,
              "column": 10
            },
            "end": {
              "line": 161,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "native-on-mobile",
          "description": "Set to `true` to use the native input automatically on mobile devices, if it available",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 10
            },
            "end": {
              "line": 169,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "mobile-user-agent-test-string",
          "description": "When `nativeOnMobile` is set to `true` this string is used to test the userAgent for a mobile device",
          "sourceRange": {
            "start": {
              "line": 174,
              "column": 10
            },
            "end": {
              "line": 178,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "opened",
          "description": "if `true` the picker is opened",
          "sourceRange": {
            "start": {
              "line": 183,
              "column": 10
            },
            "end": {
              "line": 188,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "horizontal-align",
          "description": "The orientation against which to align the element horizontally\nrelative to the related input element. Possible values are \"left\", \"right\", \"center\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "sourceRange": {
            "start": {
              "line": 194,
              "column": 10
            },
            "end": {
              "line": 198,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "vertical-align",
          "description": "The orientation against which to align the element vertically\nrelative to the related input element. Possible values are \"top\", \"bottom\", \"middle\", \"auto\". (comparable to `iron-fit-behavior` and its `no-overlap`-attribute)",
          "sourceRange": {
            "start": {
              "line": 204,
              "column": 10
            },
            "end": {
              "line": 208,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "auto-confirm",
          "description": "Set to `true` to make the input auto-confirming",
          "sourceRange": {
            "start": {
              "line": 213,
              "column": 10
            },
            "end": {
              "line": 216,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "no-cancel-on-esc-key",
          "description": "Set to `true` to disable canceling the overlay with the ESC key.",
          "sourceRange": {
            "start": {
              "line": 221,
              "column": 10
            },
            "end": {
              "line": 224,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "no-cancel-on-outside-click",
          "description": "Set to `true` to disable canceling the dropdown by clicking outside the picker.",
          "sourceRange": {
            "start": {
              "line": 229,
              "column": 10
            },
            "end": {
              "line": 232,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "keep-multiple-pickers-open",
          "description": "Set to `true` to keep multiple pickers open. (will only work as expected when e.g. `noCancelOnOutsideClick` is set to true)",
          "sourceRange": {
            "start": {
              "line": 237,
              "column": 10
            },
            "end": {
              "line": 240,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "no-tip",
          "description": "Set to `true` to disable the tip of the picker",
          "sourceRange": {
            "start": {
              "line": 245,
              "column": 10
            },
            "end": {
              "line": 248,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "confirmed-value",
          "description": "The confirmed value. When `auto-confirm` is not set, the value will only change, when you confirm.",
          "sourceRange": {
            "start": {
              "line": 253,
              "column": 10
            },
            "end": {
              "line": 256,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "input-picker-closed",
          "description": "input-picker-closed\nFired after a picker has been closed.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "input-picker-opened",
          "description": "input-picker-opened\nFired when a picker has been opened.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "mixins": [
        "FormElementMixin"
      ]
    },
    {
      "description": "mixin to extend an picker with an `overlay-element`",
      "summary": "",
      "path": "overlay-picker-mixin.html",
      "properties": [
        {
          "name": "alwaysOnTop",
          "type": "boolean",
          "description": "Set to true to keep overlay always on top.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 20,
              "column": 10
            },
            "end": {
              "line": 22,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "noOverlap",
          "type": "boolean",
          "description": "Will position the element around the positionTarget without overlapping it.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 26,
              "column": 10
            },
            "end": {
              "line": 29,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "withBackdrop",
          "type": "boolean",
          "description": "Set to true to display a backdrop behind the overlay. It traps the focus\nwithin the light DOM of the overlay.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 34,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "noCancelOnOutsideClick",
          "type": "boolean",
          "description": "Set to true to disable canceling the overlay by clicking outside it.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 10
            },
            "end": {
              "line": 44,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "dynamicAlign",
          "type": "boolean",
          "description": "If true, it will use `horizontalAlign` and `verticalAlign` values as preferred alignment\nand if there's not enough space, it will pick the values which minimize the cropping.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 50,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "autoFitOnAttach",
          "type": "boolean",
          "description": "Set to true to auto-fit on attach.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 61,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "fitInto",
          "type": "Object",
          "description": "The element to fit the overlay into. By default it is the window.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 10
            },
            "end": {
              "line": 68,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "positionTarget",
          "type": "Element",
          "description": "The element that should be used to position the overlay. If not set, it will\ndefault to the polyfill node.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 10
            },
            "end": {
              "line": 76,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_sizingTarget",
          "type": "Element",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 10
            },
            "end": {
              "line": 81,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 119,
              "column": 6
            },
            "end": {
              "line": 124,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "fit",
          "description": "Positions and fits the overlay into the `fitInto` element.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 6
            },
            "end": {
              "line": 131,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "open",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 133,
              "column": 6
            },
            "end": {
              "line": 136,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "notifyResize",
          "description": "notify manually the overlay to resize",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 141,
              "column": 6
            },
            "end": {
              "line": 143,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 11,
          "column": 2
        },
        "end": {
          "line": 145,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "OverlayPickerMixin",
      "attributes": [
        {
          "name": "always-on-top",
          "description": "Set to true to keep overlay always on top.",
          "sourceRange": {
            "start": {
              "line": 20,
              "column": 10
            },
            "end": {
              "line": 22,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "no-overlap",
          "description": "Will position the element around the positionTarget without overlapping it.",
          "sourceRange": {
            "start": {
              "line": 26,
              "column": 10
            },
            "end": {
              "line": 29,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "with-backdrop",
          "description": "Set to true to display a backdrop behind the overlay. It traps the focus\nwithin the light DOM of the overlay.",
          "sourceRange": {
            "start": {
              "line": 34,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "no-cancel-on-outside-click",
          "description": "Set to true to disable canceling the overlay by clicking outside it.",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 10
            },
            "end": {
              "line": 44,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "dynamic-align",
          "description": "If true, it will use `horizontalAlign` and `verticalAlign` values as preferred alignment\nand if there's not enough space, it will pick the values which minimize the cropping.",
          "sourceRange": {
            "start": {
              "line": 50,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "auto-fit-on-attach",
          "description": "Set to true to auto-fit on attach.",
          "sourceRange": {
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 61,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "fit-into",
          "description": "The element to fit the overlay into. By default it is the window.",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 10
            },
            "end": {
              "line": 68,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "position-target",
          "description": "The element that should be used to position the overlay. If not set, it will\ndefault to the polyfill node.",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 10
            },
            "end": {
              "line": 76,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Element"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    },
    {
      "description": "Mixin to extend an element for binding switch button to increment properties. Button-switches should be of class `switch` and have the attributes `prop` and `step` that define the property to increment in the given step.\nThe element is required to be extended with `Polymer.GestureEventListeners`.",
      "summary": "",
      "path": "switch-container-mixin.html",
      "properties": [
        {
          "name": "dwellTime",
          "type": "number",
          "description": "dwell time of incrementing inputs by the buttons in milliseconds. It is minimum 75 milliseconds.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 24,
              "column": 10
            },
            "end": {
              "line": 28,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_dwellTimeChanged\""
            }
          },
          "defaultValue": "150"
        },
        {
          "name": "_switchSelector",
          "type": "string",
          "description": "css-selector for switches",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 36,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\".switch\""
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 64,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 6
            },
            "end": {
              "line": 69,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_addSwitchListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 71,
              "column": 6
            },
            "end": {
              "line": 84,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_removeSwitchListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 6
            },
            "end": {
              "line": 99,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_checkKeycodeSwitch",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 6
            },
            "end": {
              "line": 108,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_increm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 110,
              "column": 6
            },
            "end": {
              "line": 140,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_incremProp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 6
            },
            "end": {
              "line": 144,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            },
            {
              "name": "step"
            }
          ]
        },
        {
          "name": "_getDefaultForProp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 6
            },
            "end": {
              "line": 148,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ]
        },
        {
          "name": "_stopActiveIncremJob",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 6
            },
            "end": {
              "line": 157,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_dwellTimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 6
            },
            "end": {
              "line": 165,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dwellTime"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 13,
          "column": 2
        },
        "end": {
          "line": 167,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "SwitchContainerMixin",
      "attributes": [
        {
          "name": "dwell-time",
          "description": "dwell time of incrementing inputs by the buttons in milliseconds. It is minimum 75 milliseconds.",
          "sourceRange": {
            "start": {
              "line": 24,
              "column": 10
            },
            "end": {
              "line": 28,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    }
  ]
}
